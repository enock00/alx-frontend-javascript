!function(o){var e={};function n(t){if(e[t])return e[t].exports;var r=e[t]={i:t,l:!1,exports:{}};return o[t].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=o,n.c=e,n.d=function(o,e,t){n.o(o,e)||Object.defineProperty(o,e,{enumerable:!0,get:t})},n.r=function(o){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(o,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(o,"__esModule",{value:!0})},n.t=function(o,e){if(1&e&&(o=n(o)),8&e)return o;if(4&e&&"object"==typeof o&&o&&o.__esModule)return o;var t=Object.create(null);if(n.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:o}),2&e&&"string"!=typeof o)for(var r in o)n.d(t,r,function(e){return o[e]}.bind(null,r));return t},n.n=function(o){var e=o&&o.__esModule?function(){return o.default}:function(){return o};return n.d(e,"a",e),e},n.o=function(o,e){return Object.prototype.hasOwnProperty.call(o,e)},n.p="",n(n.s=0)}([function(o,e){var n={firstName:"John",fullTimeEmployee:!1,lastName:"Doe",location:"London",contract:!1,workFromHome:function(){throw new Error("Function not implemented.")},getCoffeeBreak:function(){throw new Error("Function not implemented.")},workTeacherTasks:function(){throw new Error("Function not implemented.")}};console.log(n);var t,r={firstName:"John",lastName:"Doe",location:"London",fullTimeEmployee:!0,numberOfReports:17,workFromHome:function(){throw new Error("Function not implemented.")},getCoffeeBreak:function(){throw new Error("Function not implemented.")},workDirectorTasks:function(){throw new Error("Function not implemented.")},workTeacherTasks:function(){throw new Error("Function not implemented.")}};console.log(r),console.log((t={firstName:"John",lastName:"Doe"}).firstName+". "+t.lastName);var i=new(function(){function o(o,e){this.firstName=o,this.lastName=e}return o.prototype.workOnHomework=function(){return"Currently working"},o.prototype.displayName=function(){return this.firstName},o}())("John","Doe");console.log(i.displayName()),console.log(i.workOnHomework());var u=function(){function o(){}return o.prototype.workFromHome=function(){return"Working from home"},o.prototype.getCoffeeBreak=function(){return"Getting a coffee break"},o.prototype.workDirectorTasks=function(){return"Getting to director tasks"},o}(),c=function(){function o(){}return o.prototype.workFromHome=function(){return"Cannot work from home"},o.prototype.getCoffeeBreak=function(){return"Cannot have a break"},o.prototype.workTeacherTasks=function(){return"Getting to work"},o}();function f(o){return"number"==typeof o&&o<500?new c:new u}console.log(f(200)),console.log(f(1e3)),console.log(f("$500"))}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,